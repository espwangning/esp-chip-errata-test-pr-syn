stages:
  - auto_trans
  - check
  - build
  - deploy

variables:
  # Versioned esp-idf-doc env image to use for all document building jobs
  ESP_DOCS_ENV_IMAGE: "$CI_DOCKER_REGISTRY/esp-idf-doc-env-v5.4:1-1"
  ESP_DOCS_PATH: "$CI_PROJECT_DIR"

.build_template:
  stage: build
  image: $ESP_DOCS_ENV_IMAGE
  tags:
    - build
  parallel:
    matrix:
      - DOCLANG: ["en", "zh_CN"]
        DOCTGT: ["esp32s3", "esp32c6", "esp32h2", "esp32c2", "esp32s2", "esp32c3"]

build_errata_html:
  extends:
    - .build_template
  variables:
    DOCS_DIR: $CI_PROJECT_DIR/docs
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'  # Run for all changes to a merge request's source branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH       # Run for all changes to the default branch
  script:
    - cd $DOCS_DIR
    - bash ./check_lang_folder_sync.sh
    - pip install -r requirements.txt
    - build-docs --skip-reqs-check -l $DOCLANG -t $DOCTGT
    - ARTIFACT_URL="$CI_JOB_URL/artifacts/file/docs/_build/$DOCLANG/$DOCTGT/html/index.html"
    - echo "ESP-Chip-Errata documentation preview in HTML is available at $ARTIFACT_URL"
  artifacts:
    when: always
    paths:
      - $DOCS_DIR/_build/*/*/html/*
      - $DOCS_DIR/_build/*/*/*.txt
    expire_in: 4 days

build_errata_pdf:
  extends:
    - .build_template
  variables:
    DOCS_DIR: $CI_PROJECT_DIR/docs
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'  # Run for all changes to a merge request's source branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH       # Run for all changes to the default branch
  artifacts:
    when: always
    paths:
      - $DOCS_DIR/_build/*/*/latex/*
      - $DOCS_DIR/_build/*/*/*.txt
      # - $DOCS_DIR/logs/doc-url-*.txt
    expire_in: 4 days
  script:
    - cd $DOCS_DIR
    - bash ./check_lang_folder_sync.sh
    - pip install -r requirements.txt
    - build-docs --skip-reqs-check -bs latex -l $DOCLANG -t $DOCTGT
    - ARTIFACT_URL="$CI_JOB_URL/artifacts/file/docs/_build/$DOCLANG/$DOCTGT/latex/build/esp-chip-errata-$DOCLANG-master-$DOCTGT.pdf"
    - echo "ESP-Chip-Errata documentation preview in PDF is available at $ARTIFACT_URL"

.deploy_docs_template:
  stage: deploy
  image: $ESP_DOCS_ENV_IMAGE
  tags:
    - deploy_docs
  needs:
    - build_errata_html
    - build_errata_pdf

deploy_docs_preview:
  extends:
    - .deploy_docs_template
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'  # Run for all changes to a merge request's source branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH       # Run for all changes to the default branch
  variables:
    TYPE: "preview"
    DOCS_BUILD_DIR: "${CI_PROJECT_DIR}/docs/_build/"
    DOCS_DEPLOY_PRIVATEKEY: "$DOCS_PREVIEW_DEPLOY_KEY"
    DOCS_DEPLOY_SERVER: "$DOCS_PREVIEW_SERVER"
    DOCS_DEPLOY_SERVER_USER: "$DOCS_PREVIEW_SERVER_USER"
    DOCS_DEPLOY_PATH: "$DOCS_PREVIEW_PATH"
    DOCS_DEPLOY_URL_BASE: "$DOCS_PREVIEW_SERVER_URL/esp-chip-errata"
  script:
    - source ${CI_PROJECT_DIR}/ci/utils.sh
    - add_doc_server_ssh_keys $DOCS_DEPLOY_PRIVATEKEY $DOCS_DEPLOY_SERVER $DOCS_DEPLOY_SERVER_USER
    - export GIT_VER=$(git describe --always)
    - pip install -r ${CI_PROJECT_DIR}/docs/requirements.txt
    - mkdir -p logs
    - deploy-docs | tee logs/doc-url.txt
  artifacts:
    when: always
    paths:
      - logs/doc-url.txt
    expire_in: 4 days

post_links:
  stage: deploy
  tags: [deploy_docs]
  image: $ESP_DOCS_ENV_IMAGE
  needs:
    - deploy_docs_preview
  rules:
    # Run for all changes to a merge request's source branch
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - pip install -r ${CI_PROJECT_DIR}/docs/requirements.txt
    - ls -al logs
    - python3 post-mr-note.py $GITLAB_MR_NOTE_TOKEN $CI_PROJECT_PATH $CI_MERGE_REQUEST_IID --url $GITLAB_URL

deploy_docs_production:
  extends:
    - .deploy_docs_template
  only:
    - master
  variables:
    TYPE: "production"
    DOCS_BUILD_DIR: "${CI_PROJECT_DIR}/docs/_build/"
    DOCS_DEPLOY_PRIVATEKEY: "$DOCS_PROD_DEPLOY_KEY"
    DOCS_DEPLOY_SERVER: "$DOCS_PROD_SERVER"
    DOCS_DEPLOY_SERVER_USER: "$DOCS_PROD_SERVER_USER"
    DOCS_DEPLOY_PATH: "$DOCS_PROD_PATH"
    DOCS_DEPLOY_URL_BASE: "https://docs.espressif.com/projects/esp-chip-errata"
  script:
    - source ${CI_PROJECT_DIR}/ci/utils.sh
    - add_doc_server_ssh_keys $DOCS_DEPLOY_PRIVATEKEY $DOCS_DEPLOY_SERVER $DOCS_DEPLOY_SERVER_USER
    - export GIT_VER=$(git describe --always)
    - pip install -r ${CI_PROJECT_DIR}/docs/requirements.txt
    - deploy-docs

check_doc_links:
  stage: check
  image: $ESP_DOCS_ENV_IMAGE
  tags: [check_doc_links]
  variables:
    DOCS_DIR: $CI_PROJECT_DIR/docs
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'  # Run for all changes to a merge request's source branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH       # Run for all changes to the default branch
  script:
    - cd docs
    - cd $DOCS_DIR
    - pip install -r requirements.txt
    - build-docs -t $DOCTGT -l $DOCLANG linkcheck
  parallel:
    matrix:
      - DOCLANG: ["en", "zh_CN"]
        DOCTGT: ["esp32s2", "esp32s3", "esp32c3", "esp32c6", "esp32h2", "esp32c2"]

check_line_num:
  image: python:3.8
  stage: auto_trans
  tags:
    - build_docs
  rules:
    - if: '$BOT_LABEL_AUTO_TRANS || $CI_MERGE_REQUEST_LABELS =~ /^(?:[^,\n\r]+,)*trans_updated(?:,[^,\n\r]+)*$/i'
    - if: '$CI_JOB_NAME =~ $BOT_DYNAMIC_TEST_JOBS && $BOT_DYNAMIC_TEST_JOBS'
  script:
    - echo "Start to check"
    - python3 --version
    - /usr/local/bin/python -m pip install --upgrade pip
    - git clone $AUTO_TRANSLATE_REPO
    - pip3 install -r ./auto-translate/requirements.txt
    - python3 ./auto-translate/check_line_num.py
    - echo "Check completed"

translate_new:
  image: python:3.8
  stage: auto_trans
  tags:
    - build_docs
  rules:
    - if: '$BOT_LABEL_AUTO_TRANS || $CI_MERGE_REQUEST_LABELS =~ /^(?:[^,\n\r]+,)*trans_new(?:,[^,\n\r]+)*$/i'
    - if: '$CI_JOB_NAME =~ $BOT_DYNAMIC_TEST_JOBS && $BOT_DYNAMIC_TEST_JOBS'
  script:
    - echo "Start to translate"
    - python3 --version
    - /usr/local/bin/python -m pip install --upgrade pip
    - git clone -b feature/optimize_language_determination $AUTO_TRANSLATE_REPO
    - pip3 install -r ./auto-translate/requirements.txt
    - echo $CI_COMMIT_REF_NAME
    - python3 ./auto-translate/translate_rst_files.py $OPENAI_API_KEY $GITLAB_URL $TRANS_BOT_TOKEN $PROJECT_ID $CI_COMMIT_REF_NAME
    - echo "Translation completed"

translate_updated:
  image: python:3.8
  stage: auto_trans
  tags:
    - build_docs
  rules:
    - if: '$BOT_LABEL_AUTO_TRANS || $CI_MERGE_REQUEST_LABELS =~ /^(?:[^,\n\r]+,)*trans_updated(?:,[^,\n\r]+)*$/i'
    - if: '$CI_JOB_NAME =~ $BOT_DYNAMIC_TEST_JOBS && $BOT_DYNAMIC_TEST_JOBS'
  script:
    - echo "Start to translate"
    - python3 --version
    - /usr/local/bin/python -m pip install --upgrade pip
    - git clone -b feature/optimize_language_determination $AUTO_TRANSLATE_REPO
    - pip3 install -r ./auto-translate/requirements.txt
    - pip3 install tenacity==8.3.0
    - echo $CI_COMMIT_REF_NAME
    - python3 ./auto-translate/translate_rst_files.py $OPENAI_API_KEY $GITLAB_URL $TRANS_BOT_TOKEN $PROJECT_ID $CI_COMMIT_REF_NAME -a
    - echo "Translation completed"

# check_format:
#   stage: check
#   image: $ESP_DOCS_ENV_IMAGE
#   tags:  [host_test]
#   rules:
#     - if: $CI_PIPELINE_SOURCE == 'merge_request_event'  # Run for all changes to a merge request's source branch
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH       # Run for all changes to the default branch
#   script:
#     - git clone -b new_check_format $SCRIPTS_REPO
#     - python3 tools/check_rst_format_mr_files.py
#   variables:
#       GIT_STRATEGY: fetch
#       GIT_DEPTH: 0
#       allow_failure: true
